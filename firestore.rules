rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Goals collection
    match /goals/{goalId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // AI Suggestions subcollection
    match /goals/{goalId}/suggestions/{suggestionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/goals/$(goalId)).data.userId;
    }

    // Users collection (for user profiles)
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }

    // Tasks collection (if you have tasks)
    match /tasks/{taskId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }

    // Notifications collection (if you have notifications)
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
} 